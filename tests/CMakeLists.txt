CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(gtest-mtp-responder C CXX)

SET(GTEST_TEST "gtest-mtp-responder")
ADD_DEFINITIONS("-DUSE_DLOG")

SET(REQUIRES_LIST ${REQUIRES_LIST}
	glib-2.0
	gio-2.0
	gmock
	dlog
    capi-content-media-content
    capi-media-metadata-extractor
    vconf
    dlog
    tapi
    capi-system-info
    storage
    libsystemd-daemon
    libsystemd
)

IF(BUILD_GTESTS)
	ADD_DEFINITIONS("-DTIZEN_TEST_GTESTS")
ENDIF(BUILD_GTESTS)
IF(BUILD_GCOV)
	ADD_DEFINITIONS("-DTIZEN_TEST_GCOV")
ENDIF(BUILD_GCOV)

INCLUDE(FindPkgConfig)

FILE(GLOB GTEST_TEST_SRCS *.cpp ${CMAKE_SOURCE_DIR}/src/*.c)

PKG_CHECK_MODULES(GTEST_TEST_PKG REQUIRED ${REQUIRES_LIST})

FOREACH(flag ${GTEST_TEST_PKG_CFLAGS})
	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
ENDFOREACH(flag)

INCLUDE_DIRECTORIES(${GTEST_TEST_PKG_INCLUDE_DIRS})
LINK_DIRECTORIES(${GTEST_TEST_PKG_LIBRARY_DIRS})

INCLUDE_DIRECTORIES(${pkgs_INCLUDE_DIRS})
LINK_DIRECTORIES(${pkgs_LIBRARY_DIRS})


SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -Wall -fPIE")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${EXTRA_CFLAGS}")
SET(CMAKE_EXE_LINKER_FLAGS "-Wl,--as-needed -pie")

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)

#AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src SRCS)
#AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src/entity SRCS)
#AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src/transport SRCS)
#AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src/util SRCS)

ADD_EXECUTABLE(${GTEST_TEST} ${GTEST_TEST_SRCS})
TARGET_LINK_LIBRARIES(${GTEST_TEST} ${GTEST_TEST_LDFLAGS} ${GTEST_TEST_PKG_LDFLAGS} ${LIBRARY} ${pkgs_LDFLAGS} -ldl -lgcov -lpthread -lrt -lgcrypt)
INSTALL(TARGETS ${GTEST_TEST} RUNTIME DESTINATION bin)
